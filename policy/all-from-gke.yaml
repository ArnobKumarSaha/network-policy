apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-09-25T09:51:36Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: cert-manager-webhook-allow-egress
    namespace: cert-manager
    resourceVersion: "29048"
    uid: 65fe0df3-5493-4828-9801-d8c6a54d9361
  spec:
    egress:
    - ports:
      - port: 80
        protocol: TCP
      - port: 443
        protocol: TCP
      - port: 53
        protocol: TCP
      - port: 53
        protocol: UDP
      - port: 6443
        protocol: TCP
      to:
      - ipBlock:
          cidr: 0.0.0.0/0
    podSelector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
    policyTypes:
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-09-25T09:51:36Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: cert-manager-webhook-allow-ingress
    namespace: cert-manager
    resourceVersion: "29047"
    uid: 83400606-1588-4c88-b26b-bd563b9de20d
  spec:
    ingress:
    - from:
      - ipBlock:
          cidr: 0.0.0.0/0
    podSelector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"backup-db-egress","namespace":"demo"},"spec":{"egress":[{}],"podSelector":{"matchLabels":{"app.kubernetes.io/managed-by":"kubestash.com","kubestash.com/invoker-namespace":"demo"}},"policyTypes":["Egress"]}}
    creationTimestamp: "2024-09-25T15:28:25Z"
    generation: 1
    name: backup-db-egress
    namespace: demo
    resourceVersion: "259450"
    uid: 04d0e8e9-d950-40f9-a7ea-020ad06627d5
  spec:
    egress:
    - {}
    podSelector:
      matchLabels:
        app.kubernetes.io/managed-by: kubestash.com
        kubestash.com/invoker-namespace: demo
    policyTypes:
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"db-pods-internal","namespace":"demo"},"spec":{"egress":[{"to":[{"namespaceSelector":{"matchExpressions":[{"key":"kubernetes.io/metadata.name","operator":"Exists"}]}}]},{"to":[{"ipBlock":{"cidr":"34.118.224.1/16"}}]}],"ingress":[{"from":[{"namespaceSelector":{"matchExpressions":[{"key":"kubernetes.io/metadata.name","operator":"Exists"}]}}]},{"from":[{"ipBlock":{"cidr":"34.118.224.1/16"}}]}],"podSelector":{"matchLabels":{"app.kubernetes.io/component":"database","app.kubernetes.io/managed-by":"kubedb.com"}},"policyTypes":["Ingress","Egress"]}}
    creationTimestamp: "2024-09-25T15:04:12Z"
    generation: 5
    name: db-pods-internal
    namespace: demo
    resourceVersion: "252279"
    uid: 98eefbce-48f2-4447-b1a2-2f241beca7b3
  spec:
    egress:
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: demo
      - ipBlock:
          cidr: 0.0.0.0/0
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: demo
    podSelector:
      matchLabels:
        app.kubernetes.io/component: database
        app.kubernetes.io/managed-by: kubedb.com
    policyTypes:
    - Ingress
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"kubedb-healthcheck","namespace":"demo"},"spec":{"ingress":[{"from":[{"namespaceSelector":{"matchLabels":{"kubernetes.io/metadata.name":"kubedb"}},"podSelector":{"matchLabels":{"app.kubernetes.io/name":"kubedb-provisioner"}}}]}],"podSelector":{"matchLabels":{"app.kubernetes.io/component":"database","app.kubernetes.io/managed-by":"kubedb.com"}},"policyTypes":["Ingress"]}}
    creationTimestamp: "2024-09-25T15:04:12Z"
    generation: 1
    name: kubedb-healthcheck
    namespace: demo
    resourceVersion: "243059"
    uid: 990e2aab-3242-4b6f-befb-2dd557c64d2c
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: kubedb
        podSelector:
          matchLabels:
            app.kubernetes.io/name: kubedb-provisioner
    podSelector:
      matchLabels:
        app.kubernetes.io/component: database
        app.kubernetes.io/managed-by: kubedb.com
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{"meta.helm.sh/release-name":"kubedb-provisioner","meta.helm.sh/release-namespace":"kubedb"},"labels":{"app.kubernetes.io/managed-by":"Helm"},"name":"kubedb-provisioner-egress","namespace":"kubedb"},"spec":{"egress":[{}],"podSelector":{},"policyTypes":["Egress"]}}
      meta.helm.sh/release-name: kubedb-provisioner
      meta.helm.sh/release-namespace: kubedb
    creationTimestamp: "2024-09-25T13:00:20Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: kubedb-provisioner-egress
    namespace: kubedb
    resourceVersion: "160928"
    uid: 0b14789a-9456-4b26-a5ce-25ff836a68a5
  spec:
    egress:
    - {}
    podSelector: {}
    policyTypes:
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prometheus-stack
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2024-09-25T09:52:25Z"
    generation: 1
    labels:
      app: kube-prometheus-stack-operator
      app.kubernetes.io/component: prometheus-operator
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 62.7.0
      chart: kube-prometheus-stack-62.7.0
      heritage: Helm
      release: kube-prometheus-stack
    name: kube-prometheus-stack-operator
    namespace: monitoring
    resourceVersion: "29774"
    uid: 9d49f4cb-daee-4f94-8a8e-672ae87cd472
  spec:
    egress:
    - {}
    ingress:
    - ports:
      - port: 10250
        protocol: TCP
    podSelector:
      matchLabels:
        app: kube-prometheus-stack-operator
        release: kube-prometheus-stack
    policyTypes:
    - Egress
    - Ingress
kind: List
metadata:
  resourceVersion: ""
